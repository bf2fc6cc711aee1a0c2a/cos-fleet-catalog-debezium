name: Deploy Debezium COS Fleet Catalog config

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'descriptors/**'
      - 'templates/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: openshift/origin-cli:latest
    steps:
      - name: Checkout Debezium COS Fleet Catalog
        uses: actions/checkout@v2
      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          skip_cache: "true"
          oc: "latest"
      - name: Verify OpenShift CLI tools
        run: |
          oc version
      - name: Log in and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.K8S_CLUSTER_DEV }}
          openshift_token: ${{ secrets.K8S_CLUSTER_DEV_TOKEN }}
          insecure_skip_tls_verify: false
          namespace: ${{ env.K8S_CLUSTER_DEV_NAMESPACE }}
      - name: Deploy Debezium COS Fleet Catalog ConfigMaps
        run: >
          cd descriptors/ ;
          for dir in $(ls -d */ | cut -f1 -d'/') ; do
            echo "Deploying ${dir}..." ;        
            oc create configmap "connector-catalog-debezium-${dir}" --from-file=${dir}/ --namespace ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }} -o yaml --dry-run | oc replace -f - ;
          done
      - name: Restart FleetManager
        run: |
          oc rollout restart deployment/cos-fleet-manager --namespace ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}  

  catalog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2        
      - name: Set versions
        run: |
          export C_VERSION="${GITHUB_REF_NAME#v}" 
          export C_REVISION="${GITHUB_SHA}" 
          
          echo "CONNECTORS_VERSION=${C_VERSION}" >> $GITHUB_ENV
          echo "CONNECTORS_REVISION=${C_REVISION}" >> $GITHUB_ENV
          echo "CONNECTORS_RELEASE=${C_VERSION}-${C_REVISION}" >> $GITHUB_ENV

      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_MCI_USR }}
          password: ${{ secrets.QUAY_MCI_PWD }}

      - name: Build Catalog Image
        run: |
          docker build \
            -t "quay.io/rhoas/cos-fleet-catalog-debezium:${CONNECTORS_RELEASE}" \
            -t "quay.io/rhoas/cos-fleet-catalog-debezium:latest" \
            -f Dockerfile.catalog .

      - name: Push Container Images
        run: |
          docker push "quay.io/rhoas/cos-fleet-catalog-debezium:${CONNECTORS_RELEASE}"
          docker push "quay.io/rhoas/cos-fleet-catalog-debezium:latest"

  update-manifest:
    needs:
      - catalog
    uses: ./.github/workflows/update-manifest.yml
    with:
      overlay: "dev"
    secrets:
      token: ${{ secrets.PR_TOKEN }}
